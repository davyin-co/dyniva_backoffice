<?php

use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\views\Entity\View;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Url;
use Drupal\taxonomy\Entity\Vocabulary;
use Drupal\system\Entity\Menu;
use Drupal\views\Views;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_preinstall().
 */
function dyniva_backoffice_preinstall($module) {
  \Drupal::service('theme_installer')->install(['dyniva_admin']);
}

function dyniva_backoffice_menu_local_actions_alter(&$local_actions) {
  //manage taxonomy overview page
  $default = $local_actions['entity.taxonomy_term.add_form'];
  $term_manage_action = $default;
  $term_manage_action['id'] = 'manage.entity.taxonomy_term.add_form';
  $term_manage_action['route_name'] = 'manage.entity.taxonomy_term.add_form';
  $term_manage_action['appears_on'][0] = 'manage.entity.taxonomy_vocabulary.overview_form';
  $term_manage_action['provider'] = 'dyniva_backoffice';
  $local_actions['manage.entity.taxonomy_term.add_form'] = $term_manage_action;

  // manage menu overview page.
  $default = $local_actions['entity.menu.add_link_form'];
  $menu_manage_action = $default;
  $menu_manage_action['id'] = 'manage.entity.menu.add_link_form';
  $menu_manage_action['route_name'] = 'manage.entity.menu.add_link_form';
  $menu_manage_action['appears_on'][0] = 'manage.entity.menu.edit_form';
  $menu_manage_action['provider'] = 'dyniva_backoffice';
  $local_actions['manage.entity.menu.add_link_form'] = $menu_manage_action;


  $views = Views::getAllViews();
  $default = [
    "id" => "entity.taxonomy_term.add_form",
    "title" => new TranslatableMarkup('Add Term'),
    "route_name" => "manage.entity.taxonomy_term.add_form",
    "route_parameters" => [],
    "options" => [],
    "appears_on" => [
    ],
    'weight' => 0,
    "class" => "Drupal\Core\Menu\LocalActionDefault",
    "provider" => "dyniva_backoffice",
  ];
  $action_map = [
    'node' => 'manage.node.add',
    'user' => 'manage.user.admin_create',
    'taxonomy' => 'manage.entity.taxonomy_term.add_form',
  ];
  /** @var View $view */
  foreach ($views as $view) {
    $display_list = $view->get('display');
    foreach ($display_list as $display) {
      //For the disabled display, hide it.
      if (array_key_exists('enabled', $display['display_options']) && $display['display_options']['enabled'] == FALSE) {
        continue;
      }
      if ($display['display_plugin'] == 'page' && array_key_exists('header', $display['display_options']) && str_starts_with($display['display_options']['path'], 'manage/')) {
        foreach ($display['display_options']['header'] as $action_info) {
          if ($action_info['plugin_id'] == 'views_add_button_area') {
            $identifier = sprintf('manage.views.%s.%s.%s', $view->id(), $display['id'], $action_info['id']);
            $description = $display['display_description'] ?? '';
            [$entity_type, $entity_bundle] = explode('+', $action_info['type']);
            if (array_key_exists($entity_type, $action_map)) {
              $link_text = !empty($action_info['button_text']) ? $action_info['button_text'] : 'Add ' . $entity_bundle;
              $current = [
                'id' => $identifier,
                'title' => new TranslatableMarkup($link_text),
                'description' => new TranslatableMarkup($description),
                'route_name' => $action_map[$entity_type],
                "route_parameters" => [
                ],
                "appears_on" => [
                  sprintf('view.%s.%s', $view->id(), $display['id']),
                ],
              ];
              if ($entity_type == 'node') {
                $current['route_parameters'] = [
                  'node_type' => $entity_bundle,
                ];
              }
              if ($entity_type == 'taxonomy_term') {
                $current['route_parameters'] = [
                  'taxonomy_vocabulary' => $entity_bundle,
                ];
              }
              $local_actions[$identifier] = array_replace_recursive($default, $current);
            }
          }
        }
      }
    }
  }
}

/**
 * Implements hook_views_pre_view().
 * remove the views_add_button, as it has been processed as menu actions.
 */
function dyniva_backoffice_views_pre_view(ViewExecutable $view, $display_id, array &$args) {
  $display = $view->getHandler($display_id, 'header', '');
  /** @var \Drupal\views\Plugin\views\display\Page $display */
  $display = $view->getDisplay();
  if ($display->getPluginId() == 'page') {
    $header_options = $display->getOption('header');
    foreach ($header_options as $key => $header_option) {
      //$handler = $view->getHandler($display->display['id'], 'header', $key);
      if ($header_option['plugin_id'] == 'views_add_button_area') {
        $view->removeHandler($display_id, 'header', $key);
      }
    }
  }
}

/**
 * Implements hook_menu_links_discovered_alter().
 */
function dyniva_backoffice_menu_links_discovered_alter(&$links) {
  // Landing pae manage
  if (\Drupal::moduleHandler()->moduleExists('dyniva_layout_builder')) {
    $links['manage.content.landing_page'] = [
      'title' => new TranslatableMarkup('Landing Pages'),
      'description' => new TranslatableMarkup('Landing Pages Manage'),
      'route_name' => 'view.manage_landing_page.list',
      'parent' => 'manage.admin_content',
      'menu_name' => 'manage',
      'weight' => 1,
    ];
  }
  if (\Drupal::moduleHandler()->moduleExists('dyniva_document')) {
    $links['manage.content.document'] = [
      'title' => new TranslatableMarkup('Document'),
      'description' => new TranslatableMarkup('Manage Document'),
      'route_name' => 'view.document_overview.table',
      'parent' => 'manage.admin_content',
      'menu_name' => 'manage',
      'weight' => 100,
    ];
  }
  if (\Drupal::moduleHandler()->moduleExists('dyniva_job')) {
    $links['manage.content.job'] = [
      'title' => new TranslatableMarkup('Jobs'),
      'description' => new TranslatableMarkup('Manage Jobs'),
      'route_name' => 'view.jobs.page_1',
      'parent' => 'manage.admin_content',
      'menu_name' => 'manage',
      'weight' => 100,
    ];
  }
  if (\Drupal::moduleHandler()->moduleExists('dyniva_event')) {
    $links['manage.content.event'] = [
      'title' => new TranslatableMarkup('Event'),
      'description' => new TranslatableMarkup('Manage Events'),
      'route_name' => 'view.event.page_1',
      'parent' => 'manage.admin_content',
      'menu_name' => 'manage',
      'weight' => 100,
    ];
  }
  if (\Drupal::moduleHandler()->moduleExists('dyniva_staff')) {
    $links['manage.content.staff'] = [
      'title' => new TranslatableMarkup('Staff'),
      'description' => new TranslatableMarkup('Manage Staff'),
      'route_name' => 'view.staff.page_1',
      'parent' => 'manage.admin_content',
      'menu_name' => 'manage',
      'weight' => 100,
    ];
  }

  //Get content from manage_contents views.
  /** @var View $view */
  if ($view = View::load('manage_content')) {
    $display_list = $view->get('display');
    $default = [
      'parent' => 'manage.admin_content',
      'menu_name' => 'manage',
    ];
    $seq = 1;
    foreach ($display_list as $display) {
      $seq++;
      //For the disabled display, hide it.
      if (array_key_exists('enabled', $display['display_options']) && $display['display_options']['enabled'] == FALSE) {
        continue;
      }
      if ($display['display_plugin'] == 'page') {
        $identifier = 'manage.content.' . $display['id'];
        $description = $display['display_description'] ?? '';
        $current = [
          'title' => new TranslatableMarkup($display['display_title']),
          'description' => new TranslatableMarkup($description),
          'route_name' => 'view.manage_content.' . $display['id'],
          'weight' => -100 + $seq,
        ];
        $links[$identifier] = $current + $default;
      }
    }
  }
  // taxonomy manage
  if (\Drupal::moduleHandler()->moduleExists('taxonomy')) {
    $vocabulary_list = Vocabulary::loadMultiple();
    /** @var Vocabulary $vocabulary */
    foreach ($vocabulary_list as $vocabulary) {
      $links['manage.taxonomy.' . $vocabulary->id()] = [
        'title' => new TranslatableMarkup($vocabulary->label()),
        'description' => new TranslatableMarkup($vocabulary->getDescription()),
        'route_name' => 'manage.entity.taxonomy_vocabulary.overview_form',
        'parent' => 'manage.taxonomy',
        'menu_name' => 'manage',
        'route_parameters' => [
          'taxonomy_vocabulary' => $vocabulary->id(),
        ],
      ];
    }
  }
  // menu manage
  if (\Drupal::moduleHandler()->moduleExists('menu_link_content')) {
    $menu_list = Menu::loadMultiple();
    $ignore_menus = ['account', 'admin', 'tools', 'devel'];
    /** @var Menu $menu */
    foreach ($menu_list as $menu) {
      if (in_array($menu->id(), $ignore_menus)) {
        continue;
      }
      $links['manage.menu.' . $menu->id()] = [
        'title' => new TranslatableMarkup('[Menu] ' . $menu->label()),
        'description' => new TranslatableMarkup($menu->getDescription()),
        'route_name' => 'manage.entity.menu.edit_form',
        'parent' => 'manage.site',
        'menu_name' => 'manage',
        'route_parameters' => [
          'menu' => $menu->id(),
        ],
      ];
    }
  }

  ## admin_audit_trail module
  if (\Drupal::moduleHandler()->moduleExists('admin_audit_trail')) {
    $links['manage.admin_audit_trail'] = [
      'title' => new TranslatableMarkup('Audit Logs'),
      'description' => new TranslatableMarkup('Audit Trail Manage'),
      'route_name' => 'admin_audit_trail.report_form',
      'parent' => 'manage.admin',
      'menu_name' => 'manage',
      'weight' => 50,
    ];
  }
}

/**
 * Helper function to check current page is /manage
 */
function page_is_manage() {
  /** @var \Drupal\Core\Routing\RouteMatch $current_route */
  $current_path = \Drupal::service('current_route_match')
    ->getRouteObject()
    ->getPath();
  // 匹配当前页面是views的而且url以/manage开头的
  if (str_starts_with($current_path, '/manage')) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_form_FORM_ID_alter().

 */
function dyniva_backoffice_form_views_form_media_library_page_alter(&$form, FormStateInterface $form_state) {

}

/**
 * Implements hook_form_alter().
 */
function dyniva_backoffice_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // form:/manage/media-grid, manage/media/add/{media_type}
  // change the media_library form provided by core the form action.
  $form_ids = ['media_image_add_form', 'views_form_media_library_page'];
  if (in_array($form_id, $form_ids)) {
    $path = \Drupal::request()->getRequestUri();
    $form['#action'] = $path;
    //array_unshift($form['#submit'],'media_form_redirect_to_manage');
    //$form['#submit'][] = 'media_form_redirect_to_manage';
  }
}
function media_form_redirect_to_manage(&$form,FormStateInterface $form_state) {
  $url = Url::fromRoute('manage.media_grid');
  $form_state->setRedirectUrl($url);
}
/**
 * Implements hook_form_FORM_ID_alter().
 * path: /manage/menu/main, alter the menu links overview page.
 */
function dyniva_backoffice_form_menu_edit_form_alter(&$form, FormStateInterface $form_state) {
  if (!page_is_manage()) {
    return;
  }

  foreach (Element::children($form['links']['links']) as $key) {
    foreach ($form['links']['links'][$key]['operations']['#links'] as $op_key => $url) {
      if (in_array($op_key, ['edit', 'delete', 'translate'])) {
        /** @var \Drupal\Core\Url $url */
        $url = $form['links']['links'][$key]['operations']['#links'][$op_key]['url'];
        $manage_url = Url::fromRoute('manage.' . $url->getRouteName(), $url->getRouteParameters(), $url->getOptions());
        $form['links']['links'][$key]['operations']['#links'][$op_key]['url'] = $manage_url;
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function dyniva_backoffice_form_taxonomy_overview_terms_alter(&$form, FormStateInterface $form_state) {
  if (!page_is_manage()) {
    return;
  }
  unset($form['terms']['#empty']);
  unset($form['actions']['reset_alphabetical']);
  foreach (Element::children($form['terms']) as $key) {
    foreach ($form['terms'][$key]['operations']['#links'] as $op_key => $url) {
      if (in_array($op_key, ['edit', 'delete', 'translate'])) {
        /** @var \Drupal\Core\Url $url */
        $url = $form['terms'][$key]['operations']['#links'][$op_key]['url'];
        $manage_url = Url::fromRoute('manage.' . $url->getRouteName(), $url->getRouteParameters(), $url->getOptions());
        $form['terms'][$key]['operations']['#links'][$op_key]['url'] = $manage_url;
      }
    }
  }
}

/**
 * Implements hook__entity_operation_alter().
 */
function dyniva_backoffice_entity_operation_alter(array &$operations, \Drupal\Core\Entity\EntityInterface $entity) {
  $current_route_name = \Drupal::service('current_route_match')->getRouteName();
  // 匹配当前页面是views的而且url以/manage开头的
  if (str_starts_with($current_route_name, 'view.') && page_is_manage()) {
    if ($entity->getEntityTypeId() == 'node') {
      // for landing page, put the layout on top.
      if ($entity->bundle() == 'landing_page' && array_key_exists('layout', $operations)) {
        $operations['layout']['weight'] = -100;
      }

      if (array_key_exists('edit', $operations)) {
        /** @var Url $edit_url */
        $edit_url = $operations['edit']['url'];
        $new_edit_url = Url::fromRoute('manage.entity.node.edit_form', $edit_url->getRouteParameters(), $edit_url->getOptions());
        $operations['edit']['url'] = $new_edit_url;
      }

      if (array_key_exists('delete', $operations)) {
        /** @var Url $edit_url */
        $delete_url = $operations['delete']['url'];
        $new_delete_url = Url::fromRoute('manage.entity.node.delete_form', $delete_url->getRouteParameters(), $delete_url->getOptions());
        $operations['delete']['url'] = $new_delete_url;
      }

      if (array_key_exists('translate', $operations)) {
        /** @var Url $edit_url */
        $translate_url = $operations['translate']['url'];
        $new_translate_url = Url::fromRoute('manage.entity.node.content_translation_overview', $translate_url->getRouteParameters(), $translate_url->getOptions());
        $operations['translate']['url'] = $new_translate_url;
      }
    }

    // User
    if ($entity->getEntityTypeId() == 'user') {
      /** @var Url $edit_url */
      $edit_url = $operations['edit']['url'];
      $new_edit_url = Url::fromRoute('manage.entity.user.edit_form', $edit_url->getRouteParameters(), $edit_url->getOptions());
      $operations['edit']['url'] = $new_edit_url;
    }
  }
}

/**
 * Implements hook_preprocess_entity_add_list.
 * Process the manage/media/add page url.
 */
function dyniva_backoffice_preprocess_entity_add_list(&$vars) {
  // double check current page is translate overview page.
  if (!page_is_manage()) {
    return;
  }
  /** @var \Drupal\Core\Routing\RouteMatch $current_route */
  $current_route = \Drupal::service('current_route_match');
  $current_route_name = $current_route->getRouteName();
  if ($current_route_name != 'manage.entity.media.add_page') {
    return;
  }
  //replace the routing entity.media.add_form with manage.entity.media.add_form, and add destination query params.
  foreach ($vars['bundles'] as $bundle => $item) {
    /** @var \Drupal\Core\Link $add_link */
    $add_link = $item['add_link'];
    $url = $add_link->getUrl();
    $origin_route_name = $url->getRouteName();
    $destination_options['query']['destination'] = Url::fromRoute('manage.media_grid')->toString();
    $options = $url->getOptions() + $destination_options;
    $manage_url = Url::fromRoute('manage.' . $origin_route_name, $url->getRouteParameters(), $options);
    $add_link->setUrl($manage_url);
    $vars['bundles'][$bundle]['add_link'] = $add_link;
  }
}

/**
 * Implements hook_preprocess_table.
 * Process the translate page edit/add translate links to manage.
 */
function dyniva_backoffice_preprocess_table(&$vars) {
  // double check current page is translate overview page.
  if (!page_is_manage()) {
    return;
  }

  /** @var \Drupal\Core\Routing\RouteMatch $current_route */
  $current_route = \Drupal::service('current_route_match');
  $current_route_name = $current_route->getRouteName();
  //Looks this code will process all content translation page.
  if (!str_ends_with($current_route_name, '.content_translation_overview')) {
    return;
  }

  foreach ($vars['rows'] as $row_id => $row_item) {
    $links = $row_item['cells'][3]['content']['#links'];
    foreach ($links as $link_key => $link) {
      /** @var Url $url */
      $url = $link['url'];
      $origin_route_name = $url->getRouteName();
      $manage_url = Url::fromRoute('manage.' . $origin_route_name, $url->getRouteParameters(), $url->getOptions());
      $vars['rows'][$row_id]['cells'][3]['content']['#links'][$link_key]['url'] = $manage_url;
    }
  }
}

/**
 * Implements hook_views_add_button_info_alter().
 */
function dyniva_backoffice_views_add_button_info_alter(&$info) {
  $info['views_add_button_node'] = $info['views_add_button_node_manage'];
  $info['views_add_button_user'] = $info['views_add_button_user_manage'];
  $info['views_add_taxonomy_node'] = $info['views_add_button_taxonomy_manage'];
}
